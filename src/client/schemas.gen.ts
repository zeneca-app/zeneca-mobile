// This file is auto-generated by @hey-api/openapi-ts

export const AccountReadSchema = {
  properties: {
    id: {
      type: "string",
      format: "uuid",
      title: "Id",
    },
    name: {
      type: "string",
      title: "Name",
    },
    status: {
      $ref: "#/components/schemas/AccountStatus",
    },
    country: {
      type: "string",
      title: "Country",
    },
    category: {
      anyOf: [
        {
          type: "string",
        },
        {
          type: "null",
        },
      ],
      title: "Category",
    },
    person_type: {
      $ref: "#/components/schemas/PersonType",
    },
  },
  type: "object",
  required: ["id", "name", "status", "country", "category", "person_type"],
  title: "AccountRead",
} as const;

export const AccountStatusSchema = {
  type: "string",
  enum: ["CREATED", "VERIFYING", "ACTIVE", "DELETED"],
  title: "AccountStatus",
} as const;

export const AddressUSSchema = {
  properties: {
    street_line_1: {
      type: "string",
      title: "Street Line 1",
    },
    street_line_2: {
      anyOf: [
        {
          type: "string",
        },
        {
          type: "null",
        },
      ],
      title: "Street Line 2",
    },
    city: {
      type: "string",
      title: "City",
    },
    country: {
      type: "string",
      enum: ["USA"],
      const: "USA",
      title: "Country",
    },
    state: {
      $ref: "#/components/schemas/USAState",
    },
    postal_code: {
      type: "string",
      title: "Postal Code",
    },
  },
  type: "object",
  required: ["street_line_1", "city", "country", "state", "postal_code"],
  title: "AddressUS",
} as const;

export const BalanceSchema = {
  properties: {
    available: {
      type: "string",
      title: "Available",
      default: "0",
    },
    pending: {
      type: "string",
      title: "Pending",
      default: "0",
    },
    equity: {
      type: "string",
      title: "Equity",
      default: "0",
    },
  },
  type: "object",
  title: "Balance",
} as const;

export const BankSchema = {
  properties: {
    id: {
      type: "string",
      format: "uuid",
      title: "Id",
    },
    name: {
      type: "string",
      title: "Name",
    },
    institution_name: {
      type: "string",
      title: "Institution Name",
    },
    country: {
      type: "string",
      title: "Country",
    },
    currency: {
      type: "string",
      title: "Currency",
    },
    bank_code: {
      anyOf: [
        {
          type: "string",
        },
        {
          type: "null",
        },
      ],
      title: "Bank Code",
    },
    transfer_code: {
      anyOf: [
        {
          type: "string",
        },
        {
          type: "null",
        },
      ],
      title: "Transfer Code",
    },
    payout_method_id: {
      anyOf: [
        {
          type: "string",
        },
        {
          type: "null",
        },
      ],
      title: "Payout Method Id",
    },
    created_at: {
      type: "string",
      format: "date-time",
      title: "Created At",
    },
    updated_at: {
      type: "string",
      format: "date-time",
      title: "Updated At",
    },
  },
  type: "object",
  required: ["name", "institution_name", "country", "currency"],
  title: "Bank",
} as const;

export const BankAccountTypeSchema = {
  type: "string",
  enum: ["savings", "checking"],
  title: "BankAccountType",
} as const;

export const BankCodeCOSchema = {
  type: "string",
  enum: [
    "co_bogota",
    "co_bancolombia",
    "co_daviplata",
    "co_nequi",
    "co_lulo_bank_sa",
    "co_falabella",
    "co_davivienda",
    "co_bbva",
    "co_global66",
  ],
  title: "BankCodeCO",
} as const;

export const BeneficiaryLatamSchema = {
  properties: {
    person_type: {
      $ref: "#/components/schemas/PersonType",
    },
    tax_identification: {
      type: "string",
      title: "Tax Identification",
    },
    email: {
      type: "string",
      title: "Email",
    },
  },
  type: "object",
  required: ["person_type", "tax_identification", "email"],
  title: "BeneficiaryLatam",
} as const;

export const BeneficiaryUSSchema = {
  properties: {
    person_type: {
      $ref: "#/components/schemas/PersonType",
    },
    first_name: {
      type: "string",
      title: "First Name",
    },
    last_name: {
      type: "string",
      title: "Last Name",
    },
  },
  type: "object",
  required: ["person_type", "first_name", "last_name"],
  title: "BeneficiaryUS",
} as const;

export const CountrySchema = {
  type: "string",
  enum: ["USA", "COL", "MEX", "BRA", "ARG", "PAN"],
  title: "Country",
} as const;

export const CountryBaseSchema = {
  properties: {
    name_iso: {
      type: "string",
      title: "Name Iso",
    },
    code_2: {
      type: "string",
      title: "Code 2",
    },
    code_3: {
      type: "string",
      title: "Code 3",
    },
    currency: {
      type: "string",
      title: "Currency",
    },
    is_supported: {
      type: "boolean",
      title: "Is Supported",
    },
  },
  type: "object",
  required: ["name_iso", "code_2", "code_3", "currency", "is_supported"],
  title: "CountryBase",
} as const;

export const CurrencySchema = {
  type: "string",
  enum: ["USD", "COP", "EUR", "MXN", "BRL", "ARS"],
  title: "Currency",
} as const;

export const ExternalAccountBRSchema = {
  properties: {
    account_name: {
      type: "string",
      title: "Account Name",
    },
    pix_key: {
      type: "string",
      title: "Pix Key",
    },
  },
  type: "object",
  required: ["account_name", "pix_key"],
  title: "ExternalAccountBR",
} as const;

export const ExternalAccountLatamSchema = {
  properties: {
    account_name: {
      type: "string",
      title: "Account Name",
    },
    account_number: {
      type: "string",
      title: "Account Number",
    },
    account_type: {
      $ref: "#/components/schemas/BankAccountType",
    },
    bank_code: {
      $ref: "#/components/schemas/BankCodeCO",
    },
    beneficiary: {
      $ref: "#/components/schemas/BeneficiaryLatam",
    },
  },
  type: "object",
  required: [
    "account_name",
    "account_number",
    "account_type",
    "bank_code",
    "beneficiary",
  ],
  title: "ExternalAccountLatam",
} as const;

export const ExternalAccountReadSimpleSchema = {
  properties: {
    account_number: {
      anyOf: [
        {
          type: "string",
        },
        {
          type: "null",
        },
      ],
      title: "Account Number",
    },
  },
  type: "object",
  required: ["account_number"],
  title: "ExternalAccountReadSimple",
} as const;

export const ExternalAccountUSSchema = {
  properties: {
    bank_name: {
      type: "string",
      title: "Bank Name",
    },
    account_name: {
      type: "string",
      title: "Account Name",
    },
    account_number: {
      type: "string",
      title: "Account Number",
    },
    routing_number: {
      type: "string",
      title: "Routing Number",
    },
    account_type: {
      $ref: "#/components/schemas/BankAccountType",
    },
    beneficiary: {
      $ref: "#/components/schemas/BeneficiaryUS",
    },
    address: {
      $ref: "#/components/schemas/AddressUS",
    },
    idempotency_key: {
      type: "string",
      format: "uuid",
      title: "Idempotency Key",
    },
  },
  type: "object",
  required: [
    "bank_name",
    "account_name",
    "account_number",
    "routing_number",
    "account_type",
    "beneficiary",
    "address",
  ],
  title: "ExternalAccountUS",
} as const;

export const HTTPValidationErrorSchema = {
  properties: {
    detail: {
      items: {
        $ref: "#/components/schemas/ValidationError",
      },
      type: "array",
      title: "Detail",
    },
  },
  type: "object",
  title: "HTTPValidationError",
} as const;

export const PaymentRailSchema = {
  type: "string",
  enum: ["ach", "ach_push", "wire", "sepa"],
  title: "PaymentRail",
} as const;

export const PersonTypeSchema = {
  type: "string",
  enum: ["individual", "business"],
  title: "PersonType",
} as const;

export const QuoteReadSchema = {
  properties: {
    id: {
      type: "string",
      format: "uuid",
      title: "Id",
    },
    source: {
      type: "string",
      title: "Source",
    },
    destination: {
      type: "string",
      title: "Destination",
    },
    amount_in: {
      type: "integer",
      title: "Amount In",
    },
    amount_out: {
      type: "integer",
      title: "Amount Out",
    },
    exchange_rate: {
      type: "integer",
      title: "Exchange Rate",
    },
    expires_at: {
      type: "integer",
      title: "Expires At",
    },
    network_fee: {
      anyOf: [
        {
          type: "integer",
        },
        {
          type: "null",
        },
      ],
      title: "Network Fee",
    },
    zeneca_fee: {
      type: "integer",
      title: "Zeneca Fee",
    },
    fee: {
      type: "integer",
      title: "Fee",
    },
    external_id: {
      anyOf: [
        {
          type: "string",
        },
        {
          type: "null",
        },
      ],
      title: "External Id",
    },
    recipient_id: {
      anyOf: [
        {
          type: "string",
          format: "uuid",
        },
        {
          type: "null",
        },
      ],
      title: "Recipient Id",
    },
  },
  type: "object",
  required: [
    "id",
    "source",
    "destination",
    "amount_in",
    "amount_out",
    "exchange_rate",
    "expires_at",
    "network_fee",
    "zeneca_fee",
    "fee",
    "external_id",
    "recipient_id",
  ],
  title: "QuoteRead",
} as const;

export const QuoteRequestSchema = {
  properties: {
    recipient_id: {
      anyOf: [
        {
          type: "string",
          format: "uuid",
        },
        {
          type: "null",
        },
      ],
      title: "Recipient Id",
    },
    source: {
      anyOf: [
        {
          $ref: "#/components/schemas/TokenSymbol",
        },
        {
          $ref: "#/components/schemas/Currency",
        },
      ],
      title: "Source",
    },
    destination: {
      anyOf: [
        {
          $ref: "#/components/schemas/TokenSymbol",
        },
        {
          $ref: "#/components/schemas/Currency",
        },
      ],
      title: "Destination",
    },
    amount_in: {
      anyOf: [
        {
          type: "number",
        },
        {
          type: "string",
        },
        {
          type: "null",
        },
      ],
      title: "Amount In",
    },
    amount_out: {
      anyOf: [
        {
          type: "number",
        },
        {
          type: "string",
        },
        {
          type: "null",
        },
      ],
      title: "Amount Out",
    },
    payment_rail: {
      anyOf: [
        {
          $ref: "#/components/schemas/PaymentRail",
        },
        {
          type: "null",
        },
      ],
    },
  },
  type: "object",
  required: ["recipient_id", "source", "destination"],
  title: "QuoteRequest",
} as const;

export const RecipientReadSchema = {
  properties: {
    id: {
      type: "string",
      format: "uuid",
      title: "Id",
    },
    name: {
      type: "string",
      title: "Name",
    },
    owner: {
      type: "boolean",
      title: "Owner",
    },
    country: {
      anyOf: [
        {
          $ref: "#/components/schemas/Country",
        },
        {
          type: "null",
        },
      ],
    },
  },
  type: "object",
  required: ["id", "name", "owner"],
  title: "RecipientRead",
} as const;

export const RecipientReadWithExternalAccountSchema = {
  properties: {
    id: {
      type: "string",
      format: "uuid",
      title: "Id",
    },
    name: {
      type: "string",
      title: "Name",
    },
    owner: {
      type: "boolean",
      title: "Owner",
    },
    country: {
      anyOf: [
        {
          $ref: "#/components/schemas/Country",
        },
        {
          type: "null",
        },
      ],
    },
    external_account: {
      $ref: "#/components/schemas/ExternalAccountReadSimple",
    },
  },
  type: "object",
  required: ["id", "name", "owner", "external_account"],
  title: "RecipientReadWithExternalAccount",
} as const;

export const RecipientRequestSchema = {
  oneOf: [
    {
      $ref: "#/components/schemas/RecipientRequestLatam",
    },
    {
      $ref: "#/components/schemas/RecipientRequestBR",
    },
    {
      $ref: "#/components/schemas/RecipientRequestUS",
    },
  ],
  title: "RecipientRequest",
  discriminator: {
    propertyName: "country",
    mapping: {
      ARG: "#/components/schemas/RecipientRequestLatam",
      BRA: "#/components/schemas/RecipientRequestBR",
      COL: "#/components/schemas/RecipientRequestLatam",
      MEX: "#/components/schemas/RecipientRequestLatam",
      USA: "#/components/schemas/RecipientRequestUS",
    },
  },
} as const;

export const RecipientRequestBRSchema = {
  properties: {
    name: {
      anyOf: [
        {
          type: "string",
        },
        {
          type: "null",
        },
      ],
      title: "Name",
    },
    country: {
      type: "string",
      enum: ["BRA"],
      const: "BRA",
      title: "Country",
    },
    owner: {
      type: "boolean",
      title: "Owner",
    },
    external_account: {
      $ref: "#/components/schemas/ExternalAccountBR",
    },
    customer_id: {
      type: "string",
      format: "uuid",
      title: "Customer Id",
    },
  },
  type: "object",
  required: ["name", "country", "owner", "external_account", "customer_id"],
  title: "RecipientRequestBR",
} as const;

export const RecipientRequestLatamSchema = {
  properties: {
    name: {
      anyOf: [
        {
          type: "string",
        },
        {
          type: "null",
        },
      ],
      title: "Name",
    },
    country: {
      type: "string",
      enum: ["COL", "MEX", "ARG"],
      title: "Country",
    },
    owner: {
      type: "boolean",
      title: "Owner",
    },
    external_account: {
      $ref: "#/components/schemas/ExternalAccountLatam",
    },
    customer_id: {
      type: "string",
      format: "uuid",
      title: "Customer Id",
    },
  },
  type: "object",
  required: ["name", "country", "owner", "external_account", "customer_id"],
  title: "RecipientRequestLatam",
} as const;

export const RecipientRequestUSSchema = {
  properties: {
    name: {
      anyOf: [
        {
          type: "string",
        },
        {
          type: "null",
        },
      ],
      title: "Name",
    },
    country: {
      type: "string",
      enum: ["USA"],
      const: "USA",
      title: "Country",
    },
    owner: {
      type: "boolean",
      title: "Owner",
    },
    external_account: {
      $ref: "#/components/schemas/ExternalAccountUS",
    },
    customer_id: {
      type: "string",
      format: "uuid",
      title: "Customer Id",
    },
  },
  type: "object",
  required: ["name", "country", "owner", "external_account", "customer_id"],
  title: "RecipientRequestUS",
} as const;

export const TokenSymbolSchema = {
  type: "string",
  enum: ["usdc.polygon", "usdc.base", "usdc.stellar"],
  title: "TokenSymbol",
} as const;

export const TransferReadSchema = {
  properties: {
    id: {
      type: "string",
      format: "uuid",
      title: "Id",
    },
    withdrawal: {
      anyOf: [
        {
          $ref: "#/components/schemas/WithdrawalRead",
        },
        {
          type: "null",
        },
      ],
    },
    recipient: {
      anyOf: [
        {
          $ref: "#/components/schemas/RecipientRead",
        },
        {
          type: "null",
        },
      ],
    },
    quote: {
      anyOf: [
        {
          $ref: "#/components/schemas/QuoteRead",
        },
        {
          type: "null",
        },
      ],
    },
    deposit_id: {
      anyOf: [
        {
          type: "string",
          format: "uuid",
        },
        {
          type: "null",
        },
      ],
      title: "Deposit Id",
    },
    status: {
      $ref: "#/components/schemas/TransferStatus",
    },
    customer_id: {
      type: "string",
      format: "uuid",
      title: "Customer Id",
    },
    reference_id: {
      anyOf: [
        {
          type: "string",
        },
        {
          type: "null",
        },
      ],
      title: "Reference Id",
    },
    recipient_id: {
      anyOf: [
        {
          type: "string",
          format: "uuid",
        },
        {
          type: "null",
        },
      ],
      title: "Recipient Id",
    },
    created_at: {
      type: "string",
      format: "date-time",
      title: "Created At",
    },
  },
  type: "object",
  required: ["id", "status", "customer_id", "created_at"],
  title: "TransferRead",
} as const;

export const TransferRequestSchema = {
  properties: {
    quote_id: {
      type: "string",
      format: "uuid",
      title: "Quote Id",
    },
    customer_id: {
      type: "string",
      format: "uuid",
      title: "Customer Id",
    },
    recipient_id: {
      type: "string",
      format: "uuid",
      title: "Recipient Id",
    },
    reference_id: {
      anyOf: [
        {
          type: "string",
        },
        {
          type: "null",
        },
      ],
      title: "Reference Id",
    },
  },
  type: "object",
  required: ["quote_id", "customer_id", "recipient_id"],
  title: "TransferRequest",
} as const;

export const TransferStatusSchema = {
  type: "string",
  enum: [
    "WAITING",
    "PAID",
    "PENDING",
    "SUBMITTED",
    "IN_PROGRESS",
    "SENT",
    "REJECTED",
    "INVALID_ACCOUNT_DETAILS",
    "ERROR",
  ],
  title: "TransferStatus",
} as const;

export const USAStateSchema = {
  type: "string",
  enum: [
    "US-AL",
    "US-AK",
    "US-AZ",
    "US-AR",
    "US-CA",
    "US-CO",
    "US-CT",
    "US-DE",
    "US-FL",
    "US-GA",
    "US-HI",
    "US-ID",
    "US-IL",
    "US-IN",
    "US-IA",
    "US-KS",
    "US-KY",
    "US-LA",
    "US-ME",
    "US-MD",
    "US-MA",
    "US-MI",
    "US-MN",
    "US-MS",
    "US-MO",
    "US-MT",
    "US-NE",
    "US-NV",
    "US-NH",
    "US-NJ",
    "US-NM",
    "US-NY",
    "US-NC",
    "US-ND",
    "US-OH",
    "US-OK",
    "US-OR",
    "US-PA",
    "US-RI",
    "US-SC",
    "US-SD",
    "US-TN",
    "US-TX",
    "US-UT",
    "US-VT",
    "US-VA",
    "US-WA",
    "US-WV",
    "US-WI",
    "US-WY",
  ],
  title: "USAState",
} as const;

export const UserSchema = {
  properties: {
    id: {
      type: "string",
      format: "uuid",
      title: "Id",
    },
    name: {
      anyOf: [
        {
          type: "string",
        },
        {
          type: "null",
        },
      ],
      title: "Name",
    },
    email: {
      type: "string",
      title: "Email",
    },
    phone: {
      anyOf: [
        {
          type: "string",
        },
        {
          type: "null",
        },
      ],
      title: "Phone",
    },
    has_third_party_auth: {
      type: "boolean",
      title: "Has Third Party Auth",
      default: false,
    },
    provider_id: {
      anyOf: [
        {
          type: "string",
        },
        {
          type: "null",
        },
      ],
      title: "Provider Id",
    },
    created_at: {
      type: "string",
      format: "date-time",
      title: "Created At",
    },
  },
  type: "object",
  required: ["name", "email", "phone", "provider_id"],
  title: "User",
} as const;

export const UserCreateInSchema = {
  properties: {
    email: {
      type: "string",
      format: "email",
      title: "Email",
    },
    name: {
      anyOf: [
        {
          type: "string",
        },
        {
          type: "null",
        },
      ],
      title: "Name",
    },
    phone: {
      anyOf: [
        {
          type: "string",
          maxLength: 64,
          minLength: 7,
          format: "phone",
        },
        {
          type: "null",
        },
      ],
      title: "Phone",
    },
    wallet: {
      anyOf: [
        {
          $ref: "#/components/schemas/WalletCreateIn",
        },
        {
          type: "null",
        },
      ],
    },
    has_third_party_auth: {
      type: "boolean",
      title: "Has Third Party Auth",
      default: false,
    },
  },
  type: "object",
  required: ["email"],
  title: "UserCreateIn",
} as const;

export const UserReadSchema = {
  properties: {
    id: {
      type: "string",
      format: "uuid",
      title: "Id",
    },
    name: {
      anyOf: [
        {
          type: "string",
        },
        {
          type: "null",
        },
      ],
      title: "Name",
    },
    email: {
      type: "string",
      title: "Email",
    },
    phone: {
      anyOf: [
        {
          type: "string",
        },
        {
          type: "null",
        },
      ],
      title: "Phone",
    },
    has_third_party_auth: {
      type: "boolean",
      title: "Has Third Party Auth",
    },
    provider_id: {
      anyOf: [
        {
          type: "string",
        },
        {
          type: "null",
        },
      ],
      title: "Provider Id",
    },
    wallets: {
      items: {
        $ref: "#/components/schemas/WalletRead",
      },
      type: "array",
      title: "Wallets",
    },
    account: {
      anyOf: [
        {
          $ref: "#/components/schemas/AccountRead",
        },
        {
          type: "null",
        },
      ],
    },
  },
  type: "object",
  required: [
    "id",
    "name",
    "email",
    "phone",
    "has_third_party_auth",
    "provider_id",
    "wallets",
    "account",
  ],
  title: "UserRead",
} as const;

export const ValidationErrorSchema = {
  properties: {
    loc: {
      items: {
        anyOf: [
          {
            type: "string",
          },
          {
            type: "integer",
          },
        ],
      },
      type: "array",
      title: "Location",
    },
    msg: {
      type: "string",
      title: "Message",
    },
    type: {
      type: "string",
      title: "Error Type",
    },
  },
  type: "object",
  required: ["loc", "msg", "type"],
  title: "ValidationError",
} as const;

export const WalletCreateInSchema = {
  properties: {
    address: {
      type: "string",
      title: "Address",
    },
    smart_account_address: {
      type: "string",
      title: "Smart Account Address",
    },
  },
  type: "object",
  required: ["address", "smart_account_address"],
  title: "WalletCreateIn",
} as const;

export const WalletReadSchema = {
  properties: {
    address: {
      type: "string",
      title: "Address",
    },
    smart_account_address: {
      type: "string",
      title: "Smart Account Address",
    },
  },
  type: "object",
  required: ["address", "smart_account_address"],
  title: "WalletRead",
} as const;

export const WithdrawalReadSchema = {
  properties: {
    id: {
      type: "string",
      format: "uuid",
      title: "Id",
    },
    status: {
      $ref: "#/components/schemas/TransferStatus",
    },
    external_id: {
      type: "string",
      title: "External Id",
    },
    payout_address: {
      type: "string",
      title: "Payout Address",
    },
    payout_token: {
      type: "string",
      title: "Payout Token",
    },
    payout_network_id: {
      type: "string",
      title: "Payout Network Id",
    },
    tx_hash: {
      anyOf: [
        {
          type: "string",
        },
        {
          type: "null",
        },
      ],
      title: "Tx Hash",
    },
    quote_id: {
      anyOf: [
        {
          type: "string",
          format: "uuid",
        },
        {
          type: "null",
        },
      ],
      title: "Quote Id",
    },
    created_at: {
      type: "string",
      format: "date-time",
      title: "Created At",
    },
    finished_at: {
      anyOf: [
        {
          type: "string",
          format: "date-time",
        },
        {
          type: "null",
        },
      ],
      title: "Finished At",
    },
  },
  type: "object",
  required: [
    "id",
    "status",
    "external_id",
    "payout_address",
    "payout_token",
    "payout_network_id",
    "created_at",
  ],
  title: "WithdrawalRead",
} as const;
