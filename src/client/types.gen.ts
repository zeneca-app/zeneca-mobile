// This file is auto-generated by @hey-api/openapi-ts

export type AccountRead = {
  id: string;
  name?: string | null;
  last_name?: string | null;
  status: AccountStatus;
  ob_status: OnboardingStatus;
  country?: string | null;
  person_type: PersonType;
};

export type AccountStatus = "CREATED" | "VERIFYING" | "ACTIVE" | "DELETED";

export type AddressUS = {
  street_line_1: string;
  street_line_2?: string | null;
  city: string;
  country: "USA";
  state: USAState;
  postal_code: string;
};

export type country = "USA";

export type AssetDetail = {
  id: string;
  name: string;
  description: string;
  symbol: string;
  display_name: string;
  logo_url: string;
  external_id: string;
  price: string;
  change_percent: string;
  change: string;
  close: string;
  high: string;
  low: string;
  open: string;
  previous_close: string;
  volume: string;
};

export type AssetPrice = {
  id: string;
  name: string;
  description: string;
  symbol: string;
  display_name: string;
  logo_url: string;
  external_id: string;
  price: string;
};

export type Balance = {
  available?: string;
  pending?: string;
  portfolio_market_value?: string;
  readonly precision: number;
  readonly equity: string;
};

export type Bank = {
  id?: string;
  name: string;
  institution_name: string;
  country: string;
  currency: string;
  bank_code?: string | null;
  transfer_code?: string | null;
  payout_method_id?: string | null;
  created_at?: string;
  updated_at?: string;
};

export type BankAccountType = "savings" | "checking";

export type BankCodeCO =
  | "co_bogota"
  | "co_bancolombia"
  | "co_daviplata"
  | "co_nequi"
  | "co_lulo_bank_sa"
  | "co_falabella"
  | "co_davivienda"
  | "co_bbva"
  | "co_global66";

export type BeneficiaryLatam = {
  person_type: PersonType;
  tax_identification: string;
  email: string;
};

export type BeneficiaryUS = {
  person_type: PersonType;
  first_name: string;
  last_name: string;
};

export type Country = "USA" | "COL" | "MEX" | "BRA" | "ARG" | "PAN";

export type CountryBase = {
  name_iso: string;
  code_2: string;
  code_3: string;
  currency: string;
  is_supported: boolean;
};

export type Currency = "USD" | "COP" | "EUR" | "MXN" | "BRL" | "ARS";

export type ExternalAccountBR = {
  account_name: string;
  pix_key: string;
};

export type ExternalAccountLatam = {
  account_name: string;
  account_number: string;
  account_type: BankAccountType;
  bank_code: BankCodeCO;
  beneficiary: BeneficiaryLatam;
};

export type ExternalAccountReadSimple = {
  account_number: string | null;
};

export type ExternalAccountUS = {
  bank_name: string;
  account_name: string;
  account_number: string;
  routing_number: string;
  account_type: BankAccountType;
  beneficiary: BeneficiaryUS;
  address: AddressUS;
  idempotency_key?: string;
};

export type HTTPValidationError = {
  detail?: Array<ValidationError>;
};

export type KYCStatus = "APPROVED" | "REJECTED" | "PENDING" | "INCOMPLETE";

export type KycStatusResponse = {
  status: KYCStatus;
  attempted_dt: string;
};

export type MarketHours = {
  is_market_open: boolean;
  current_session_close_dt: string | null;
  current_session_open_dt: string | null;
  next_session_close_dt: string | null;
  next_session_open_dt: string | null;
};

export type MyAsset = {
  id?: string;
  symbol: string;
  name?: string | null;
  display_name?: string | null;
  logo_url?: string | null;
  quantity_in_wei: number;
  external_id: number;
  equity: string;
  change_percent: string;
  readonly precision: number;
  /**
   * Convert from 18 decimals to 6 decimals Wei
   */
  readonly amount: string;
};

export type MyAssets = Array<MyAsset>;

export type OnboardingAddressStep = {
  street_line_1: string;
  street_line_2?: string | null;
  city: string;
  state: string;
  postal_code: string;
};

export type OnboardingCountryStep = {
  /**
   * ISO 2-letter country code
   */
  country: string;
};

export type OnboardingNamesStep = {
  name: string;
  last_name: string;
};

export type OnboardingStatus =
  | "NAMES_STEP"
  | "COUNTRY_STEP"
  | "ADDRESS_STEP"
  | "KYC_PROVIDER_STEP";

export type Order = {
  external_id: string;
  symbol: string;
  name: string;
  status: OrderStatus;
  order_side: OrderSide;
  order_type: OrderType;
  payment_quantity: string;
  fee: string;
  total: string;
  transaction_hash: string | null;
  asset_token_filled: string | null;
  created_at: string;
  filled_at: string;
};

export type OrderQuote = {
  id: string;
  asset_id: string;
  side: OrderSide;
  order_type: OrderType;
  quantity?: string | null;
  amount?: string | null;
  asset_price?: string;
  fee: string;
  total: string;
  amount_to_receive: string;
  external_order_id: string;
  smart_account_address: string;
  signature: string;
  order_data: OrderQuoteData;
  chain_id: number;
  deadline: number;
  created_at: number;
  readonly precision: number;
};

export type OrderQuoteData = {
  recipient: string;
  asset_token_quantity: number;
  payment_token_quantity: number;
  asset_token: string;
  payment_token: string;
  sell: boolean;
  order_type: number;
  limit_price: string;
  tif: number;
  fee: string;
  request_timestamp: number;
  allowance_amount: number;
};

export type OrderQuoteRequest = {
  asset_id: string;
  side: OrderSide;
  order_type: OrderType;
  quantity?: number | null;
  amount?: number | null;
};

export type OrderSide = "BUY" | "SELL";

export type OrderStatus = "PENDING" | "FILLED" | "CANCELLED" | "ERROR";

export type OrderType = "MARKET" | "LIMIT";

export type PaymentRail = "ach" | "ach_push" | "wire" | "sepa";

export type PersonType = "individual" | "business";

export type QuoteRead = {
  id: string;
  source: string;
  destination: string;
  amount_in: number;
  amount_out: number;
  exchange_rate: number;
  expires_at: number;
  network_fee: number | null;
  zeneca_fee: number;
  fee: number;
  external_id: string | null;
  recipient_id: string | null;
};

export type QuoteRequest = {
  recipient_id: string | null;
  source: TokenSymbol | Currency;
  destination: TokenSymbol | Currency;
  amount_in?: number | string | null;
  amount_out?: number | string | null;
  payment_rail?: PaymentRail | null;
};

export type RecipientRead = {
  id: string;
  name: string;
  owner: boolean;
  country?: Country | null;
};

export type RecipientReadWithExternalAccount = {
  id: string;
  name: string;
  owner: boolean;
  country?: Country | null;
  external_account: ExternalAccountReadSimple;
};

export type RecipientRequest =
  | RecipientRequestLatam
  | RecipientRequestBR
  | RecipientRequestUS;

export type RecipientRequestBR = {
  name: string | null;
  country: "BRA";
  owner: boolean;
  external_account: ExternalAccountBR;
  customer_id: string;
};

export type RecipientRequestLatam = {
  name: string | null;
  country: "MEX";
  owner: boolean;
  external_account: ExternalAccountLatam;
  customer_id: string;
};

export type RecipientRequestUS = {
  name: string | null;
  country: "USA";
  owner: boolean;
  external_account: ExternalAccountUS;
  customer_id: string;
};

export type StockTickData = {
  close: string;
  high: string;
  low: string;
  open: string;
  timestamp: number;
};

export type StockTickDataList = Array<StockTickData>;

export type Timespan = "DAY" | "WEEK" | "MONTH" | "YEAR";

export type TokenSymbol = "usdc.polygon" | "usdc.base" | "usdc.stellar";

export type TransferRead = {
  id: string;
  withdrawal?: WithdrawalRead | null;
  recipient?: RecipientRead | null;
  quote?: QuoteRead | null;
  deposit_id?: string | null;
  status: TransferStatus;
  customer_id: string;
  reference_id?: string | null;
  recipient_id?: string | null;
  created_at: string;
};

export type TransferRequest = {
  quote_id: string;
  customer_id: string;
  recipient_id: string;
  reference_id?: string | null;
};

export type TransferStatus =
  | "WAITING"
  | "PAID"
  | "PENDING"
  | "SUBMITTED"
  | "IN_PROGRESS"
  | "SENT"
  | "REJECTED"
  | "INVALID_ACCOUNT_DETAILS"
  | "ERROR";

export type USAState =
  | "US-AL"
  | "US-AK"
  | "US-AZ"
  | "US-AR"
  | "US-CA"
  | "US-CO"
  | "US-CT"
  | "US-DE"
  | "US-FL"
  | "US-GA"
  | "US-HI"
  | "US-ID"
  | "US-IL"
  | "US-IN"
  | "US-IA"
  | "US-KS"
  | "US-KY"
  | "US-LA"
  | "US-ME"
  | "US-MD"
  | "US-MA"
  | "US-MI"
  | "US-MN"
  | "US-MS"
  | "US-MO"
  | "US-MT"
  | "US-NE"
  | "US-NV"
  | "US-NH"
  | "US-NJ"
  | "US-NM"
  | "US-NY"
  | "US-NC"
  | "US-ND"
  | "US-OH"
  | "US-OK"
  | "US-OR"
  | "US-PA"
  | "US-RI"
  | "US-SC"
  | "US-SD"
  | "US-TN"
  | "US-TX"
  | "US-UT"
  | "US-VT"
  | "US-VA"
  | "US-WA"
  | "US-WV"
  | "US-WI"
  | "US-WY";

export type User = {
  id?: string;
  name: string | null;
  email: string;
  phone: string | null;
  has_third_party_auth?: boolean;
  provider_id: string | null;
  created_at?: string;
};

export type UserCreateIn = {
  email: string;
  name?: string | null;
  phone?: string | null;
  wallet?: WalletCreateIn | null;
  has_third_party_auth?: boolean;
};

export type UserRead = {
  id: string;
  name: string | null;
  email: string;
  phone: string | null;
  has_third_party_auth: boolean;
  provider_id: string | null;
  wallets: Array<WalletRead>;
  account: AccountRead | null;
};

export type ValidationError = {
  loc: Array<string | number>;
  msg: string;
  type: string;
};

export type WalletCreateIn = {
  address: string;
  smart_account_address: string;
};

export type WalletRead = {
  address: string;
  smart_account_address: string;
};

export type WithdrawalRead = {
  id: string;
  status: TransferStatus;
  external_id: string;
  payout_address: string;
  payout_token: string;
  payout_network_id: string;
  tx_hash?: string | null;
  quote_id?: string | null;
  created_at: string;
  finished_at?: string | null;
};

export type HealthCheckResponse = unknown;

export type HealthCheckError = unknown;

export type LoginLoginOrCreateData = {
  body: UserCreateIn;
};

export type LoginLoginOrCreateResponse = User;

export type LoginLoginOrCreateError = HTTPValidationError;

export type QuotesCreateQuoteData = {
  body: QuoteRequest;
};

export type QuotesCreateQuoteResponse = QuoteRead;

export type QuotesCreateQuoteError = HTTPValidationError;

export type QuotesGetQuoteData = {
  path: {
    quote_id: string;
  };
};

export type QuotesGetQuoteResponse = QuoteRead;

export type QuotesGetQuoteError = HTTPValidationError;

export type RecipientsGetRecipientData = {
  path: {
    recipient_id: string;
  };
};

export type RecipientsGetRecipientResponse = RecipientRead;

export type RecipientsGetRecipientError = HTTPValidationError;

export type RecipientsGetRecipientsResponse =
  Array<RecipientReadWithExternalAccount>;

export type RecipientsGetRecipientsError = unknown;

export type RecipientsCreateRecipientData = {
  body: RecipientRequest;
};

export type RecipientsCreateRecipientResponse = RecipientRead;

export type RecipientsCreateRecipientError = HTTPValidationError;

export type BanksGetBanksData = {
  query: {
    country: Country;
  };
};

export type BanksGetBanksResponse = Array<Bank>;

export type BanksGetBanksError = HTTPValidationError;

export type TransfersGetTransfersResponse = Array<TransferRead>;

export type TransfersGetTransfersError = unknown;

export type TransfersCreateTransferData = {
  body: TransferRequest;
};

export type TransfersCreateTransferResponse = TransferRead;

export type TransfersCreateTransferError = HTTPValidationError;

export type TransfersGetTransferData = {
  path: {
    transaction_id: string;
  };
};

export type TransfersGetTransferResponse = TransferRead;

export type TransfersGetTransferError = HTTPValidationError;

export type WebhooksEventFromKoyweReceivedResponse = void;

export type WebhooksEventFromKoyweReceivedError = unknown;

export type WebhooksEventFromBridgeReceivedResponse = void;

export type WebhooksEventFromBridgeReceivedError = unknown;

export type WebhooksKycEventFromAipriseResponse = void;

export type WebhooksKycEventFromAipriseError = unknown;

export type WebhooksEventsFromAipriseResponse = void;

export type WebhooksEventsFromAipriseError = unknown;

export type CountriesGetCountriesResponse = Array<CountryBase>;

export type CountriesGetCountriesError = unknown;

export type UsersMeResponse = UserRead;

export type UsersMeError = unknown;

export type UsersMyBalanceResponse = Balance;

export type UsersMyBalanceError = unknown;

export type UsersMyAssetsResponse = MyAssets;

export type UsersMyAssetsError = unknown;

export type UsersGetKycStatusResponse = KycStatusResponse;

export type UsersGetKycStatusError = unknown;

export type AssetsGetAssetsResponse = Array<AssetPrice>;

export type AssetsGetAssetsError = unknown;

export type AssetsGetAssetTicksData = {
  path: {
    asset_id: string;
  };
  query?: {
    timespan?: Timespan;
  };
};

export type AssetsGetAssetTicksResponse = StockTickDataList;

export type AssetsGetAssetTicksError = HTTPValidationError;

export type AssetsGetAssetDetailData = {
  path: {
    asset_id: string;
  };
};

export type AssetsGetAssetDetailResponse = AssetDetail;

export type AssetsGetAssetDetailError = HTTPValidationError;

export type AssetsGetMarketHoursResponse = MarketHours;

export type AssetsGetMarketHoursError = unknown;

export type OrdersGetOrdersResponse = Array<Order>;

export type OrdersGetOrdersError = unknown;

export type OrdersCreateQuoteOrderData = {
  body: OrderQuoteRequest;
};

export type OrdersCreateQuoteOrderResponse = OrderQuote;

export type OrdersCreateQuoteOrderError = HTTPValidationError;

export type OnboardingOnboardingNamesStepData = {
  body: OnboardingNamesStep;
};

export type OnboardingOnboardingNamesStepResponse = AccountRead;

export type OnboardingOnboardingNamesStepError = HTTPValidationError;

export type OnboardingOnboardingCountryStepData = {
  body: OnboardingCountryStep;
};

export type OnboardingOnboardingCountryStepResponse = AccountRead;

export type OnboardingOnboardingCountryStepError = HTTPValidationError;

export type OnboardingOnboardingAddressStepData = {
  body: OnboardingAddressStep;
};

export type OnboardingOnboardingAddressStepResponse = AccountRead;

export type OnboardingOnboardingAddressStepError = HTTPValidationError;
